version: v2beta1
name: crafty-goblin

functions:
  rollback: |-
    kubectl rollout undo deployment/task-buddy

# This is a list of `pipelines` that DevSpace can execute (you can define your own)
pipelines:
  build: |-
    build_images app --tag 1.0
  # This is the pipeline for the main command: `devspace dev` (or `devspace run-pipeline dev`)
  dev:
    run: |-
      run_dependencies --all       # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all    # 2. Ensure pull secrets
      create_deployments app       # 3. Deploy all kubectl files
      start_dev app                # 4. Start dev mode "app" (see "dev" section)
  # You can run this pipeline via `devspace deploy` (or `devspace run-pipeline deploy`)
  deploy:
    run: |-
      run_dependencies --all                            # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all                         # 2. Ensure pull secrets
      build_images --all -t $(git describe --always)    # 3. Build, tag (git commit hash) and push all images (see "images")
      create_deployments app                            # 4. Deploy manifests
  rollback:
    run: |-
      run_dependencies --all                            # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all                         # 2. Ensure pull secrets
      rollback                                          # 3. Rollback

# This is a list of `images` that DevSpace can build for this project
# We recommend to skip image building during development (devspace dev) as much as possible
images:
  app:
    image: ghcr.io/ammbra/task-buddy
    tags:
      - 1.0
    target: app
    dockerfile: ./Dockerfile
    custom:
      command: |-
        docker buildx build --platform=linux/amd64 --push --tag ${runtime.images.app.image}:${runtime.images.app.tag} . -f Dockerfile --no-cache --target=$TARGET


# This is a list of `deployments` that DevSpace can create for this project
deployments:
  app:
    # This deployment uses `kubectl` but you can also define `helm` deployments
    kubectl:
      manifests:
        - k8s/**

# This is a list of `dev` containers that are based on the containers created by your deployments
dev:
  app:
    # Search for the container that runs this image
    imageSelector: ghcr.io/ammbra/task-buddy:1.0.0
    sync:
      - excludePaths:
          - .git/
        uploadExcludePaths:
          - Dockerfile
          - target/
        onUpload:
          execRemote:
            onBatch:
              command: sh
              args:
                - -c
                - mvn compile >>/dev/pts/0 || exit 0
    # Open a terminal and use the following command to start it
    terminal:
      command: ./devspace_start.sh
    # Make the following commands from my local machine available inside the dev container
    proxyCommands:
      - command: devspace
      - command: kubectl
      - command: helm
      - gitCredentials: true
    # Forward the following ports to be able access your application via localhost
    ports:
      - port: "8080:8080"
    # Open the following URLs once they return an HTTP status code other than 502 or 503
    open:
      - url: http://localhost:8080

# Use the `commands` section to define repeatable dev workflows for this project 
commands:
  use-context:
    devspace use context $@
  build-dev:
    devspace build -t 1.0.0 --var=TARGET=build
  debug-app:
    devspace dev $@
  build-prod:
    devspace build -t 1.0 --var=TARGET=app
dependencies:
   nginx:
     git: https://github.com/ammbra/crafty-goblin # Git-based dependencies
     branch: dependency
     disableProfileActivation: true
